<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/app/build.gradle">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/build.gradle" />
              <option name="originalContent" value="plugins {&#10;    id 'com.android.application'&#10;    id 'org.jetbrains.kotlin.android'&#10;    id 'org.jetbrains.kotlin.kapt'&#10;    id 'kotlin-parcelize'&#10;}&#10;&#10;android {&#10;    namespace &quot;com.picpay.desafio.android&quot;&#10;    compileSdk 34&#10;&#10;    defaultConfig {&#10;        applicationId &quot;com.picpay.desafio.android&quot;&#10;        minSdk 24&#10;        //targetSdk 34&#10;        versionCode 1&#10;        versionName &quot;1.0&quot;&#10;        testInstrumentationRunner &quot;androidx.test.runner.AndroidJUnitRunner&quot;&#10;    }&#10;&#10;    compileOptions {&#10;        sourceCompatibility JavaVersion.VERSION_17&#10;        targetCompatibility JavaVersion.VERSION_17&#10;    }&#10;    kotlinOptions { jvmTarget = '17' }&#10;//&#10;//    buildFeatures { compose true }&#10;//    composeOptions { kotlinCompilerExtensionVersion '1.5.14' }&#10;}&#10;&#10;dependencies {&#10;    // Base AndroidX&#10;    implementation &quot;androidx.core:core-ktx:1.13.1&quot;&#10;    implementation &quot;androidx.appcompat:appcompat:1.7.0&quot;&#10;    implementation &quot;androidx.constraintlayout:constraintlayout:2.1.4&quot;&#10;    implementation &quot;com.google.android.material:material:1.12.0&quot;&#10;&#10;    // Gson (atualizado)&#10;    implementation &quot;com.google.code.gson:gson:2.11.0&quot;&#10;&#10;    // Retrofit/OkHttp (com RxJava2 adapter)&#10;    def retrofit_version = &quot;2.9.0&quot;&#10;    def okhttp_version   = &quot;4.12.0&quot;&#10;    implementation &quot;com.squareup.retrofit2:retrofit:$retrofit_version&quot;&#10;    implementation &quot;com.squareup.retrofit2:adapter-rxjava2:$retrofit_version&quot;&#10;    implementation &quot;com.squareup.retrofit2:converter-gson:$retrofit_version&quot;&#10;    implementation &quot;com.squareup.okhttp3:okhttp:$okhttp_version&quot;&#10;    testImplementation &quot;com.squareup.okhttp3:mockwebserver:$okhttp_version&quot;&#10;&#10;    // Picasso (se precisar)&#10;    implementation 'com.squareup.picasso:picasso:2.8'&#10;&#10;//    // Compose (BOM cuida das versões)&#10;//    def composeBom = platform(&quot;androidx.compose:compose-bom:2024.12.00&quot;)&#10;//    implementation composeBom&#10;//    androidTestImplementation composeBom&#10;//    implementation &quot;androidx.activity:activity-compose:1.9.2&quot;&#10;//    implementation &quot;androidx.compose.ui:ui&quot;&#10;//    implementation &quot;androidx.compose.material3:material3&quot;&#10;//    implementation &quot;androidx.compose.ui:ui-tooling-preview&quot;&#10;//    debugImplementation &quot;androidx.compose.ui:ui-tooling&quot;&#10;}&#10;" />
              <option name="updatedContent" value="plugins {&#10;    id 'com.android.application'&#10;    id 'org.jetbrains.kotlin.android'&#10;    id 'org.jetbrains.kotlin.kapt'&#10;    id 'kotlin-parcelize'&#10;}&#10;&#10;android {&#10;    namespace &quot;com.picpay.desafio.android&quot;&#10;    compileSdk 34&#10;&#10;    defaultConfig {&#10;        applicationId &quot;com.picpay.desafio.android&quot;&#10;        minSdk 24&#10;        //targetSdk 34&#10;        versionCode 1&#10;        versionName &quot;1.0&quot;&#10;        testInstrumentationRunner &quot;androidx.test.runner.AndroidJUnitRunner&quot;&#10;    }&#10;&#10;    compileOptions {&#10;        sourceCompatibility JavaVersion.VERSION_17&#10;        targetCompatibility JavaVersion.VERSION_17&#10;    }&#10;    kotlinOptions { jvmTarget = '17' }&#10;//&#10;//    buildFeatures { compose true }&#10;//    composeOptions { kotlinCompilerExtensionVersion '1.5.14' }&#10;}&#10;&#10;dependencies {&#10;    // Base AndroidX&#10;    implementation &quot;androidx.core:core-ktx:1.13.1&quot;&#10;    implementation &quot;androidx.appcompat:appcompat:1.7.0&quot;&#10;    implementation &quot;androidx.constraintlayout:constraintlayout:2.1.4&quot;&#10;    implementation &quot;com.google.android.material:material:1.12.0&quot;&#10;&#10;    // Gson (atualizado)&#10;    implementation &quot;com.google.code.gson:gson:2.11.0&quot;&#10;&#10;    // Retrofit/OkHttp (com RxJava2 adapter)&#10;    def retrofit_version = &quot;2.9.0&quot;&#10;    def okhttp_version   = &quot;4.12.0&quot;&#10;    implementation &quot;com.squareup.retrofit2:retrofit:$retrofit_version&quot;&#10;    implementation &quot;com.squareup.retrofit2:adapter-rxjava2:$retrofit_version&quot;&#10;    implementation &quot;com.squareup.retrofit2:converter-gson:$retrofit_version&quot;&#10;    implementation &quot;com.squareup.okhttp3:okhttp:$okhttp_version&quot;&#10;    testImplementation &quot;com.squareup.okhttp3:mockwebserver:$okhttp_version&quot;&#10;&#10;    // Picasso (se precisar)&#10;    implementation 'com.squareup.picasso:picasso:2.8'&#10;    // CircleImageView&#10;    implementation 'de.hdodenhof:circleimageview:3.1.0'&#10;&#10;//    // Compose (BOM cuida das versões)&#10;//    def composeBom = platform(&quot;androidx.compose:compose-bom:2024.12.00&quot;)&#10;//    implementation composeBom&#10;//    androidTestImplementation composeBom&#10;//    implementation &quot;androidx.activity:activity-compose:1.9.2&quot;&#10;//    implementation &quot;androidx.compose.ui:ui&quot;&#10;//    implementation &quot;androidx.compose.material3:material3&quot;&#10;//    implementation &quot;androidx.compose.ui:ui-tooling-preview&quot;&#10;//    debugImplementation &quot;androidx.compose.ui:ui-tooling&quot;&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/picpay/desafio/android/User.kt">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/picpay/desafio/android/User.kt" />
              <option name="originalContent" value="package com.picpay.desafio.android&#10;&#10;import android.os.Parcelable&#10;import com.google.gson.annotations.SerializedName&#10;import kotlinx.android.parcel.Parcelize&#10;&#10;@Parcelize&#10;data class User(&#10;    @SerializedName(&quot;img&quot;) val img: String,&#10;    @SerializedName(&quot;name&quot;) val name: String,&#10;    @SerializedName(&quot;id&quot;) val id: Int,&#10;    @SerializedName(&quot;username&quot;) val username: String&#10;) : Parcelable" />
              <option name="updatedContent" value="package com.picpay.desafio.android&#10;&#10;import android.os.Parcelable&#10;import com.google.gson.annotations.SerializedName&#10;import kotlinx.parcelize.Parcelize&#10;&#10;@Parcelize&#10;data class User(&#10;    @SerializedName(&quot;img&quot;) val img: String,&#10;    @SerializedName(&quot;name&quot;) val name: String,&#10;    @SerializedName(&quot;id&quot;) val id: Int,&#10;    @SerializedName(&quot;username&quot;) val username: String&#10;) : Parcelable" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/picpay/desafio/android/UserListItemViewHolder.kt">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/picpay/desafio/android/UserListItemViewHolder.kt" />
              <option name="originalContent" value="package com.picpay.desafio.android&#10;&#10;import android.view.View&#10;import androidx.recyclerview.widget.RecyclerView&#10;import com.squareup.picasso.Callback&#10;import com.squareup.picasso.Picasso&#10;import kotlinx.android.synthetic.main.list_item_user.view.*&#10;&#10;class UserListItemViewHolder(&#10;    itemView: View&#10;) : RecyclerView.ViewHolder(itemView) {&#10;&#10;    fun bind(user: User) {&#10;        name.text = user.name&#10;        username.text = user.username&#10;        progressBar.visibility = View.VISIBLE&#10;        Picasso.get()&#10;            .load(user.img)&#10;            .error(R.drawable.ic_round_account_circle)&#10;            .into(itemView.picture, object : Callback {&#10;                override fun onSuccess() {&#10;                    itemView.progressBar.visibility = View.GONE&#10;                }&#10;&#10;                override fun onError(e: Exception?) {&#10;                    itemView.progressBar.visibility = View.GONE&#10;                }&#10;            })&#10;    }&#10;}" />
              <option name="updatedContent" value="package com.picpay.desafio.android&#10;&#10;import android.view.View&#10;import android.widget.ImageView&#10;import android.widget.ProgressBar&#10;import android.widget.TextView&#10;import androidx.recyclerview.widget.RecyclerView&#10;import com.squareup.picasso.Callback&#10;import com.squareup.picasso.Picasso&#10;&#10;class UserListItemViewHolder(&#10;    itemView: View&#10;) : RecyclerView.ViewHolder(itemView) {&#10;    private val name: TextView = itemView.findViewById(R.id.name)&#10;    private val username: TextView = itemView.findViewById(R.id.username)&#10;    private val progressBar: ProgressBar = itemView.findViewById(R.id.progressBar)&#10;    private val picture: ImageView = itemView.findViewById(R.id.picture)&#10;&#10;    fun bind(user: User) {&#10;        name.text = user.name&#10;        username.text = user.username&#10;        progressBar.visibility = View.VISIBLE&#10;        Picasso.get()&#10;            .load(user.img)&#10;            .error(R.drawable.ic_round_account_circle)&#10;            .into(picture, object : Callback {&#10;                override fun onSuccess() {&#10;                    progressBar.visibility = View.GONE&#10;                }&#10;&#10;                override fun onError(e: Exception?) {&#10;                    progressBar.visibility = View.GONE&#10;                }&#10;            })&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>